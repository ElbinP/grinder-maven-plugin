= Introduction = 

    The plugin consists of goals:
       * agent
       * report
       * console
       * TCPProxy

    In order to run goal from shell:
       # open a command-line shell;
       # cd into the Maven project directory;
       # execute the command *mvn com.fides:grinderplugin:0.0.1-SNAPSHOT:* followed by goal name;

    For example, to run agent goal use the following command line:
{{{
    mvn com.fides:grinderplugin:0.0.1-SNAPSHOT:agent
}}}

    To run goals on Eclipse platform, set *Run Configuration* of your Maven project creating one Maven build for each goal as follow:
       * com.fides:grinderplugin:0.0.1-SNAPSHOT:agent
       * com.fides:grinderplugin:0.0.1-SNAPSHOT:report
       * com.fides:grinderplugin:0.0.1-SNAPSHOT:console
       * com.fides:grinderplugin:0.0.1-SNAPSHOT:TCPProxy

    The first step of each goal run is create plugin configuration directory *target/test/config* in the local directory of Maven project. Here create *grinder_agent.properties* file, that contain the grinder properties configured by POM file and 

== Agent ==
    
    Agent.java class implement agent goal.

        

== Report ==
Per default, nel metodo main del file analyzer.py c'Ã© un if commentato che permette di scartare tutti I data file che hanno meno di CONFIG.buckets linee di dati. Questo valore corrisponde a quello della variabile buckets del file analyzer.properties, dove per default vale 250.

== Console ==


== TCPProxy ==